{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Token } from \"graphql\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport { createTask, taskList, deleteTask, checkAll, unCheckAll, doneTasks, undoneTasks } from \"../API/todoAPI\";\nimport todoData from \"../Helpers/todoData\";\nimport TodoItem from \"./TodoItem\";\nimport { TokenContext, UsernameContext } from \"../Context/Context\";\nexport default function TodoList() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    todos = _useState2[0],\n    setTodos = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    todosScreen = _useState4[0],\n    setTodosScreen = _useState4[1];\n  var _useState5 = useState(todos.filter(function (item) {\n      return item.done;\n    }).length),\n    _useState6 = _slicedToArray(_useState5, 2),\n    count = _useState6[0],\n    setCount = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    newTodoText = _useState8[0],\n    setNewTodoText = _useState8[1];\n  var token = React.useContext(TokenContext);\n  var username = React.useContext(UsernameContext);\n  useEffect(function () {\n    getTaskList();\n  }, []);\n  function getTaskList() {\n    taskList(username[0], token[0]).then(function (data) {\n      if (JSON.stringify(todos) != JSON.stringify(data)) {\n        setTodos(data);\n        setTodosScreen(data);\n        setCount(data.filter(function (item) {\n          return item.done;\n        }).length);\n        console.log(data);\n      }\n    });\n  }\n  var updateCountItemDone = function updateCountItemDone(id) {\n    var newTodos = todos.map(function (todo) {\n      if (todo.id === id) {\n        todo.done = !todo.done;\n      }\n      return todo;\n    });\n    setCount(newTodos.filter(function (item) {\n      return item.done;\n    }).length);\n  };\n  var addNewTodo = function addNewTodo() {\n    var newTask = createTask(newTodoText, username[0], token[0]).then(function (data) {\n      getTaskList();\n    });\n    setNewTodoText(\"\");\n  };\n  var progressTodo = function progressTodo() {\n    undoneTasks(token[0], username[0]).then(function (data) {\n      setTodos(data);\n    });\n  };\n  var solvedTodo = function solvedTodo() {\n    doneTasks(token[0], username[0]).then(function (data) {\n      setTodos(data);\n    });\n  };\n  var allTodos = function allTodos() {\n    getTaskList();\n  };\n  var checkAllTodos = function checkAllTodos() {\n    checkAll(token[0], username[0]).then(function (data) {\n      getTaskList();\n    });\n  };\n  var uncheckAllTodos = function uncheckAllTodos() {\n    unCheckAll(token[0], username[0]).then(function (data) {\n      getTaskList();\n    });\n  };\n  var deleteTodo = function deleteTodo(id) {\n    deleteTask(id, token[0]).then(getTaskList);\n  };\n  return React.createElement(View, null, React.createElement(View, {\n    style: styles.listTask\n  }, React.createElement(Text, {\n    style: styles.input\n  }, \"Voici la liste des Todos :\"), \"\\xA0 \\xA0 \\xA0\\xA0 \\xA0 \\xA0\", React.createElement(FlatList, {\n    data: todos,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(TodoItem, {\n        item: item,\n        getTaskList: getTaskList,\n        deleteTodo: deleteTodo,\n        updateCountItemDone: updateCountItemDone,\n        checkAllTodos: checkAllTodos,\n        uncheckAllTodos: uncheckAllTodos\n      });\n    }\n  }), \"\\xA0 \\xA0 \\xA0\", React.createElement(Text, {\n    style: styles.input\n  }, \"Le nombre d'item dans TodoData est \", todosScreen.length, '\\n', \"Le nombre d'item realis\\xE9 est \", count), \"\\xA0 \\xA0 \\xA0\", React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: setNewTodoText,\n    placeholder: \"saisir ici un nouvel item\",\n    minLength: 1,\n    onSubmitEditing: addNewTodo,\n    value: newTodoText\n  }), \"\\xA0 \\xA0 \\xA0\"), React.createElement(View, {\n    style: styles.content\n  }, React.createElement(Button, {\n    color: \"#2c3f5c\",\n    margin: \"80\",\n    title: \"Cr\\xE9er nouvel item\",\n    onPress: addNewTodo\n  }, \"New\"), \"\\xA0 \\xA0 \\xA0\", React.createElement(Button, {\n    color: \"#2c3e4c\",\n    title: \"Cocher tout\",\n    onPress: checkAllTodos\n  }, \"New\"), \"\\xA0 \\xA0 \\xA0\", React.createElement(Button, {\n    color: \"#2c3e4c\",\n    title: \"D\\xE9cocher tout\",\n    onPress: uncheckAllTodos\n  }, \"New\"), \"\\xA0 \\xA0 \\xA0\", React.createElement(Button, {\n    color: \"#2c3e4c\",\n    title: \"Todos r\\xE9solus\",\n    onPress: solvedTodo\n  }, \"New\"), \"\\xA0 \\xA0 \\xA0\", React.createElement(Button, {\n    color: \"#2c3e4c\",\n    title: \"Todos en cours\",\n    onPress: progressTodo\n  }, \"New\"), \"\\xA0 \\xA0 \\xA0\", React.createElement(Button, {\n    color: \"#2c3e4c\",\n    title: \"Tous les Todos (confondus)\",\n    onPress: allTodos\n  }, \"New\")));\n}\nvar styles = StyleSheet.create({\n  content: {\n    contentContainerStyle: 'center',\n    justifyContent: \"space-between\",\n    marginLeft: '8%',\n    marginRight: '8%'\n  },\n  listTask: {\n    marginLeft: '26%',\n    contentContainerStyle: 'center',\n    backgroundColor: 'e8ffff',\n    fontSize: 12\n  },\n  input: {\n    borderColor: 'black',\n    padding: 10,\n    borderRadius: 5,\n    borderWidth: 2,\n    width: '26%'\n  },\n  text: {\n    fontSize: 16\n  }\n});","map":{"version":3,"names":["Token","React","useState","useEffect","createTask","taskList","deleteTask","checkAll","unCheckAll","doneTasks","undoneTasks","todoData","TodoItem","TokenContext","UsernameContext","TodoList","todos","setTodos","todosScreen","setTodosScreen","filter","item","done","length","count","setCount","newTodoText","setNewTodoText","token","useContext","username","getTaskList","then","data","JSON","stringify","console","log","updateCountItemDone","id","newTodos","map","todo","addNewTodo","newTask","progressTodo","solvedTodo","allTodos","checkAllTodos","uncheckAllTodos","deleteTodo","styles","listTask","input","content","StyleSheet","create","contentContainerStyle","justifyContent","marginLeft","marginRight","backgroundColor","fontSize","borderColor","padding","borderRadius","borderWidth","width","text"],"sources":["/home/marta/Documents/L3/React/projetreact-marta-sara/tp4/components/TodoList.js"],"sourcesContent":["import { Token } from \"graphql\";\nimport React, {useState, useEffect } from \"react\";\nimport { StyleSheet, View, TextInput, Button, Text, FlatList, Switch } from 'react-native';\nimport { createTask, taskList, deleteTask, checkAll, unCheckAll, doneTasks, undoneTasks } from \"../API/todoAPI\";\n\nimport todoData from '../Helpers/todoData';\nimport TodoItem from './TodoItem';\nimport { TokenContext, UsernameContext } from \"../Context/Context\";\n\n\n\nexport default function TodoList(){\n   /** initialiser todos afin de pouvoir l'utiliser avec les changements d'états*/\n   const [todos, setTodos]= useState([])\n   const [todosScreen, setTodosScreen] = useState([])\n   const [count, setCount]= useState(todos.filter(item => item.done).length)\n   const [newTodoText, setNewTodoText] = useState(\"\")\n   const token = React.useContext(TokenContext)\n   const username = React.useContext(UsernameContext)\n   \n   useEffect(() => {\n      getTaskList()\n   } ,[] \n   );\n   \n   function getTaskList() {\n      \n      taskList(username[0], token[0]).then(data => {\n         if (JSON.stringify(todos) != JSON.stringify(data) ) {\n            setTodos(data);\n            setTodosScreen(data) ;\n            setCount(data.filter(item => item.done).length)\n            console.log(data)\n         }\n\n      })\n   }\n   \n   const updateCountItemDone = (id) =>{\n      /**compte les fonctions realisées et actualise au fur et à mesure */\n      const newTodos = todos.map((todo) => {\n      if (todo.id === id) {\n         todo.done = !todo.done;\n      } \n      return todo;\n      });\n\n      setCount(newTodos.filter(item => item.done).length);\n\n   }\n\n   const addNewTodo = () =>{\n      /**ajoute un nouvel item à notre liste de taches */\n      const newTask = createTask(newTodoText,username[0],token[0]).then(data => {getTaskList()})\n      setNewTodoText(\"\")\n   }\n   \n\n   const progressTodo = () =>{\n      /**affiche les todos pas encore réalisés cad todos non cochés*/\n      undoneTasks(token[0], username[0]).\n      then(data => {\n         setTodos(data)\n      })\n\n   }\n\n\n   const solvedTodo = () =>{\n      /**affiche les todos dont l'exécution est terminée cad todos cochés*/\n      doneTasks(token[0], username[0]).\n      then(data => {\n         setTodos(data)\n      })\n      \n   }\n\n   const allTodos = () =>{\n      /**affiche les todos qu'ils soient cochés ou non*/\n      getTaskList()\n   }\n\n\n   const checkAllTodos = () =>{\n      checkAll(token[0] ,username[0]).then(data => {getTaskList()})\n   }\n   \n   const uncheckAllTodos = () =>{\n      unCheckAll(token[0], username[0]).then(data => {getTaskList()})\n}\n\n   const deleteTodo = (id) => {\n      /**permet la suppression d'un item donné en paramètre */\n      deleteTask(id,token[0]).then(getTaskList)\n   }\n\n   return (\n      <View>\n      <View style={styles.listTask}>\n\n\n         <Text style = {styles.input}>\n            Voici la liste des Todos :\n         </Text>\n         &nbsp;\n         &nbsp;\n         &nbsp;&nbsp;\n         &nbsp;\n         &nbsp;\n\n         <FlatList\n            \n            data={todos}\n            renderItem={({item}) => <TodoItem item={item} getTaskList={getTaskList} deleteTodo={deleteTodo} updateCountItemDone={updateCountItemDone}\n            checkAllTodos={checkAllTodos} uncheckAllTodos={uncheckAllTodos}/>}  />\n\n         &nbsp;\n         &nbsp;\n         &nbsp;\n         <Text style = {styles.input}>\n            Le nombre d'item dans TodoData est {todosScreen.length}\n            {'\\n'} \n            Le nombre d'item realisé est {count}\n\n         </Text>\n         &nbsp;\n         &nbsp;\n         &nbsp;\n\n         <TextInput\n            style = {styles.input}\n            onChangeText={setNewTodoText}\n            placeholder='saisir ici un nouvel item'\n            minLength = {1}\n            onSubmitEditing={addNewTodo}\n            \n            value={newTodoText}\n         />\n         &nbsp;\n         &nbsp;\n         &nbsp;\n      </View>\n         <View style = {styles.content}>\n         <Button color='#2c3f5c' margin='80' title=\"Créer nouvel item\" onPress={addNewTodo}>New</Button>\n         &nbsp;\n         &nbsp;\n         &nbsp;\n         <Button color='#2c3e4c'  title=\"Cocher tout\" onPress={checkAllTodos}>New</Button>\n         &nbsp;\n         &nbsp;\n         &nbsp;\n\n         <Button color='#2c3e4c' title=\"Décocher tout\" onPress={uncheckAllTodos}>New</Button>\n         &nbsp;\n         &nbsp;\n         &nbsp;\n         <Button color='#2c3e4c'  title=\"Todos résolus\" onPress={solvedTodo}>New</Button>\n         &nbsp;\n         &nbsp;\n         &nbsp;\n         <Button color='#2c3e4c' title=\"Todos en cours\" onPress={progressTodo}>New</Button>\n         &nbsp;\n         &nbsp;\n         &nbsp;\n         <Button color='#2c3e4c' title=\"Tous les Todos (confondus)\" onPress={allTodos}>New</Button>\n         \n\n         \n\n\n        </View>\n\n      \n\n</View>\n        \n        \n\n       \n   );\n}\n\n\n\nconst styles = StyleSheet.create({\n   content: {\n      contentContainerStyle : 'center',\n      justifyContent : \"space-between\",\n      marginLeft : '8%',\n      marginRight : '8%',\n      \n   },\n   listTask: {\n      marginLeft : '26%',\n      contentContainerStyle : 'center',\n      backgroundColor : 'e8ffff',\n      fontSize: 12,\n      \n   },\n   input :{\n      borderColor :'black',\n      padding :10,\n      borderRadius : 5,\n      borderWidth : 2,\n      width : '26%',\n\n   },\n   text:{\n      fontSize: 16,\n   }\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}