{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Token } from \"graphql\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport { taskList } from \"../API/todoAPI\";\nimport todoData from \"../Helpers/todoData\";\nimport TodoItem from \"./TodoItem\";\nexport default function TodoList() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    todos = _useState2[0],\n    setTodos = _useState2[1];\n  var _useState3 = useState(todoData),\n    _useState4 = _slicedToArray(_useState3, 2),\n    todosScreen = _useState4[0],\n    setTodosScreen = _useState4[1];\n  var _useState5 = useState(todos.filter(function (item) {\n      return item.done;\n    }).length),\n    _useState6 = _slicedToArray(_useState5, 2),\n    count = _useState6[0],\n    setCount = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    newTodoText = _useState8[0],\n    setNewTodoText = _useState8[1];\n  var token = React.useContext(TokenContext);\n  function getTaskList() {\n    taskList();\n  }\n  var updateCountItemDone = function updateCountItemDone(id) {\n    var newTodos = todos.map(function (todo) {\n      if (todo.id === id) {\n        todo.done = !todo.done;\n      }\n      return todo;\n    });\n    console.log(\"todos\", newTodos);\n    setTodos(newTodos);\n    setTodosScreen(newTodos);\n    setCount(newTodos.filter(function (item) {\n      return item.done;\n    }).length);\n  };\n  var addNewTodo = function addNewTodo() {\n    var newTodos = [].concat(_toConsumableArray(todos), [{\n      id: Math.max.apply(Math, _toConsumableArray(todos.map(function (item) {\n        return item.id;\n      }))) + 1,\n      content: newTodoText,\n      done: false\n    }]);\n    setTodos(newTodos);\n    setTodosScreen(newTodos);\n    setNewTodoText(\"\");\n  };\n  var progressTodo = function progressTodo() {\n    var solved = todos.filter(function (item) {\n      return item.done == false;\n    });\n    setTodosScreen(solved);\n  };\n\n  var solvedTodo = function solvedTodo() {\n    var solved = todos.filter(function (item) {\n      return item.done == true;\n    });\n    setTodosScreen(solved);\n  };\n  var allTodos = function allTodos() {\n    var solved = todos;\n    setTodosScreen(solved);\n  };\n  var checkAllTodos = function checkAllTodos() {\n    var newTodos = todos.map(function (todo) {\n      if (todo.done === false) todo.done = true;\n      return todo;\n    });\n    setTodos(newTodos);\n    setTodosScreen(newTodos);\n    setCount(newTodos.filter(function (item) {\n      return item.done;\n    }).length);\n  };\n  var uncheckAllTodos = function uncheckAllTodos() {\n    var newTodos = todos.map(function (todo) {\n      if (todo.done === true) todo.done = false;\n      return todo;\n    });\n    setTodos(newTodos);\n    setTodosScreen(newTodos);\n    setCount(newTodos.filter(function (item) {\n      return item.done;\n    }).length);\n  };\n  var deleteTodo = function deleteTodo(id) {\n    var newTodos = todos.filter(function (item) {\n      return item.id != id;\n    });\n    setTodos(newTodos);\n    setTodosScreen(newTodos);\n    console.log(newTodos);\n  };\n  return React.createElement(View, null, React.createElement(FlatList, {\n    style: {\n      paddingLeft: 10\n    },\n    data: todosScreen,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(TodoItem, {\n        item: item,\n        deleteTodo: deleteTodo,\n        updateCountItemDone: updateCountItemDone,\n        checkAllTodos: checkAllTodos,\n        uncheckAllTodos: uncheckAllTodos\n      });\n    }\n  }), React.createElement(Text, null, \"Le nombre d'item dans TodoData est \", todos.length, '\\n', \"Le nombre d'item realis\\xE9 est \", count), React.createElement(TextInput, {\n    onChangeText: setNewTodoText,\n    placeholder: \"saisir ici un nouvel item\",\n    onSubmitEditing: addNewTodo,\n    value: newTodoText\n  }), React.createElement(Button, {\n    color: \"#32612D\",\n    title: \"Cr\\xE9er nouvel item\",\n    onPress: addNewTodo\n  }, \"New\"), React.createElement(Button, {\n    color: \"#32612D\",\n    title: \"Cocher tout\",\n    onPress: checkAllTodos\n  }, \"New\"), React.createElement(Button, {\n    color: \"#32612D\",\n    title: \"D\\xE9cocher tout\",\n    onPress: uncheckAllTodos\n  }, \"New\"), React.createElement(Button, {\n    color: \"#DD571C\",\n    title: \"Todos r\\xE9solus\",\n    onPress: solvedTodo\n  }, \"New\"), React.createElement(Button, {\n    color: \"#2C3E4C\",\n    title: \"Todos en cours\",\n    onPress: progressTodo\n  }, \"New\"), React.createElement(Button, {\n    color: \"#0080FF\",\n    title: \"Tous les Todos (confondus)\",\n    onPress: allTodos\n  }, \"New\"));\n}\nvar styles = StyleSheet.create({\n  content: {\n    flexDirection: 'row'\n  },\n  button: {\n    marginLeft: 10,\n    width: 150\n  }\n});","map":{"version":3,"names":["Token","React","useState","useEffect","taskList","todoData","TodoItem","TodoList","todos","setTodos","todosScreen","setTodosScreen","filter","item","done","length","count","setCount","newTodoText","setNewTodoText","token","useContext","TokenContext","getTaskList","updateCountItemDone","id","newTodos","map","todo","console","log","addNewTodo","Math","max","content","progressTodo","solved","solvedTodo","allTodos","checkAllTodos","uncheckAllTodos","deleteTodo","paddingLeft","styles","StyleSheet","create","flexDirection","button","marginLeft","width"],"sources":["/home/marta/Documents/L3/React/projetreact-marta-sara/tp4/components/TodoList.js"],"sourcesContent":["import { Token } from \"graphql\";\nimport React, {useState, useEffect } from \"react\";\nimport { StyleSheet, View, TextInput, Button, Text, FlatList, Switch } from 'react-native';\nimport { taskList } from \"../API/todoAPI\";\n\nimport todoData from '../Helpers/todoData';\nimport TodoItem from './TodoItem';\n\nexport default function TodoList(){\n   /** initialiser todos afin de pouvoir l'utiliser avec les changements d'états*/\n   const [todos, setTodos]= useState([])\n   const [todosScreen, setTodosScreen] = useState(todoData)\n   const [count, setCount]= useState(todos.filter(item => item.done).length)\n   const [newTodoText, setNewTodoText] = useState(\"\")\n   const token = React.useContext(TokenContext)\n   \n   function getTaskList() {\n      taskList() \n   }\n   \n   const updateCountItemDone = (id) =>{\n      /**compte les fonctions realisées et actualise au fur et à mesure */\n      const newTodos = todos.map((todo) => {\n      if (todo.id === id) {\n         todo.done = !todo.done;\n      } \n      return todo;\n      });\n      console.log(\"todos\", newTodos)\n      \n      setTodos(newTodos);\n      setTodosScreen(newTodos)\n\n      setCount(newTodos.filter(item => item.done).length);\n\n   }\n\n   \n\n\n   const addNewTodo = () =>{\n      /**ajoute un nouvel item à notre liste de taches */\n      const newTodos = [...todos, { id: Math.max(...todos.map(item => item.id)) + 1, content: newTodoText, done: false }]\n      setTodos(newTodos)\n      setTodosScreen(newTodos)\n      setNewTodoText(\"\")\n   }\n   \n\n   const progressTodo = () =>{\n      /**affiche les todos pas encore réalisés cad todos non cochés*/\n      const solved = todos.filter(item => item.done == false)\n      setTodosScreen(solved);\n     }\n\n   // const allTodo = () =>{\n   //    /**affiche tous les todos sans tenir compte de leur état de realisation*/\n   //    setTodos(todos)  \n   // }\n\n\n   const solvedTodo = () =>{\n      /**affiche les todos dont l'exécution est terminée cad todos cochés*/\n      const solved = todos.filter(item => item.done == true)\n      setTodosScreen(solved);\n   }\n\n   const allTodos = () =>{\n      /**affiche les todos qu'ils soient cochés ou non*/\n      const solved = todos\n      setTodosScreen(solved);\n   }\n\n\n   const checkAllTodos = () =>{\n        const newTodos = todos.map((todo) => {\n            if (todo.done === false)\n                todo.done = true\n            return todo\n            \n            });\n            setTodos(newTodos)\n            setTodosScreen(newTodos)\n            setCount(newTodos.filter(item => item.done).length)\n   }\n   \n   const uncheckAllTodos = () =>{\n    const newTodos = todos.map((todo) => {\n        if (todo.done === true)\n            todo.done = false\n        return todo\n        \n        });\n        setTodos(newTodos)\n        setTodosScreen(newTodos)\n        setCount(newTodos.filter(item => item.done).length)\n}\n\n   const deleteTodo = (id) => {\n      /**permet la suppression d'un item donné en paramètre */\n      const newTodos = todos.filter(item => item.id != id)\n      setTodos(newTodos)\n      setTodosScreen(newTodos)\n\n      console.log(newTodos)\n   }\n\n\n\n   return (\n      <View>\n\n         <FlatList\n            style={{ paddingLeft: 10 }}\n            data={todosScreen}\n            renderItem={({item}) => <TodoItem item={item} deleteTodo={deleteTodo} updateCountItemDone={updateCountItemDone}\n            checkAllTodos={checkAllTodos} uncheckAllTodos={uncheckAllTodos}/>}  />\n\n         <Text>\n            Le nombre d'item dans TodoData est {todos.length}\n            {'\\n'} \n            Le nombre d'item realisé est {count}\n\n         </Text>\n\n\n         <TextInput\n            onChangeText={setNewTodoText}\n            placeholder='saisir ici un nouvel item'\n            onSubmitEditing={addNewTodo}\n            \n            value={newTodoText}\n         />\n\n         <Button color='#32612D' title=\"Créer nouvel item\" onPress={addNewTodo}>New</Button>\n\n         <Button color='#32612D' title=\"Cocher tout\" onPress={checkAllTodos}>New</Button>\n\n         <Button color='#32612D' title=\"Décocher tout\" onPress={uncheckAllTodos}>New</Button>\n\n         <Button color='#DD571C' title=\"Todos résolus\" onPress={solvedTodo}>New</Button>\n\n         <Button color='#2C3E4C' title=\"Todos en cours\" onPress={progressTodo}>New</Button>\n\n         <Button color='#0080FF' title=\"Tous les Todos (confondus)\" onPress={allTodos}>New</Button>\n\n\n         {/* \n\n        \n         <Button color='#1FD655' title=\"Tout afficher\" onPress={allTodo}>New</Button> */}\n\n\n      </View>\n\n\n        \n        \n\n       \n   );\n}\n\nconst styles = StyleSheet.create({\n   content: {\n      flexDirection: 'row',\n   },\n   button: {\n      marginLeft: 10,\n      width: 150,\n      \n      \n   }\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}