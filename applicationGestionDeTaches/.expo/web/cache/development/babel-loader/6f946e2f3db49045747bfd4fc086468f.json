{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState, useEffect, useRef } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { createTask, taskList, deleteTask, checkAll, unCheckAll, doneTasks, undoneTasks } from \"../API/todoAPI\";\nimport TodoItem from \"./TodoItem\";\nimport { TokenContext, UsernameContext } from \"../Context/Context\";\nexport default function TodoList() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    todos = _useState2[0],\n    setTodos = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    todosScreen = _useState4[0],\n    setTodosScreen = _useState4[1];\n  var _useState5 = useState(todos.filter(function (item) {\n      return item.done;\n    }).length),\n    _useState6 = _slicedToArray(_useState5, 2),\n    count = _useState6[0],\n    setCount = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    newTodoText = _useState8[0],\n    setNewTodoText = _useState8[1];\n  var token = React.useContext(TokenContext);\n  var username = React.useContext(UsernameContext);\n  var counter = useRef(new Animated.Value(0)).current;\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    enableModif = _useState10[0],\n    setEnableModif = _useState10[1];\n  var load = function load(value) {\n    Animated.timing(counter, {\n      toValue: value,\n      duration: 1000,\n      useNativeDriver: true\n    }).start();\n  };\n  useEffect(function () {\n    getTaskList();\n  }, []);\n  useEffect(function () {\n    setEnableModif(boolModify);\n  }, [boolModify]);\n  useEffect(function () {\n    load(count);\n    if (count >= 100) {\n      setCount(100);\n      clearInterval(countInterval);\n    }\n  }, [count]);\n  var width = counter.interpolate({\n    inputRange: [0, todosScreen.length],\n    outputRange: [\"0%\", \"100%\"],\n    extrapolate: \"clamp\"\n  });\n  function getTaskList() {\n    taskList(username[0], token[0]).then(function (data) {\n      if (JSON.stringify(todos) != JSON.stringify(data)) {\n        setTodos(data);\n        setTodosScreen(data);\n        setCount(data.filter(function (item) {\n          return item.done;\n        }).length);\n      }\n    });\n  }\n  var updateCountItemDone = function updateCountItemDone(id) {\n    var newTodos = todos.map(function (todo) {\n      if (todo.id === id) {\n        todo.done = !todo.done;\n      }\n      return todo;\n    });\n    setCount(newTodos.filter(function (item) {\n      return item.done;\n    }).length);\n  };\n  var addNewTodo = function addNewTodo() {\n    var newTask = createTask(newTodoText, username[0], token[0]).then(function (data) {\n      getTaskList();\n    });\n    setNewTodoText(\"\");\n  };\n  var progressTodo = function progressTodo() {\n    undoneTasks(token[0], username[0]).then(function (data) {\n      setTodos(data);\n    });\n  };\n  var solvedTodo = function solvedTodo() {\n    doneTasks(token[0], username[0]).then(function (data) {\n      setTodos(data);\n    });\n  };\n  var allTodos = function allTodos() {\n    getTaskList();\n    console.log(boolModify);\n  };\n  var checkAllTodos = function checkAllTodos() {\n    checkAll(token[0], username[0]).then(function (data) {\n      getTaskList();\n    });\n  };\n  var uncheckAllTodos = function uncheckAllTodos() {\n    unCheckAll(token[0], username[0]).then(function (data) {\n      getTaskList();\n    });\n  };\n  var deleteTodo = function deleteTodo(id) {\n    deleteTask(id, token[0]).then(getTaskList);\n  };\n  var enableModifyTodo = function enableModifyTodo() {\n    console.log('Avant : ' + enableModif);\n    setEnableModif(true);\n    console.log('Apres : ' + enableModif);\n  };\n  var modifyTodo = function modifyTodo() {\n  };\n  return React.createElement(ScrollView, {\n    contentContainerStyle: {\n      flex: 1\n    }\n  }, React.createElement(Text, {\n    style: styles.textWelcome\n  }, \"Bienvenue dans votre application de gestion de t\\xE2ches ! Il y a au total \", React.createElement(\"span\", {\n    style: {\n      color: '#DC143C'\n    }\n  }, todosScreen.length, \" t\\xE2che(s) \"), \" dont \", React.createElement(\"span\", {\n    style: {\n      color: '#DC143C'\n    }\n  }, count, \" realis\\xE9e(s) \"), \". Let's Go! \\xA0 \\xA0 \\xA0\"), React.createElement(View, {\n    style: styles.progressBar\n  }, React.createElement(Animated.View, {\n    style: _objectSpread(_objectSpread({}, StyleSheet.absoluteFill), {}, {\n      backgroundColor: '#DC143C',\n      width: width\n    })\n  }), React.createElement(Text, null, \" \", count, \"/\", todosScreen.length)), React.createElement(\"div\", null, React.createElement(FlatList, {\n    numColumns: 3,\n    style: styles.listTask,\n    data: todos,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(TodoItem, {\n        item: item,\n        getTaskList: getTaskList,\n        deleteTodo: deleteTodo,\n        enableModifyTodo: enableModifyTodo,\n        updateCountItemDone: updateCountItemDone,\n        checkAllTodos: checkAllTodos,\n        uncheckAllTodos: uncheckAllTodos\n      });\n    }\n  })), React.createElement(\"div\", null, React.createElement(View, {\n    style: styles.modifyDiv\n  }, React.createElement(View, null, React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: setNewTodoText,\n    placeholder: \"Modifier ici votre item...\",\n    minLength: 1,\n    editable: enableModif,\n    onSubmitEditing: addNewTodo,\n    value: newTodoText\n  })), React.createElement(View, null, React.createElement(Button, {\n    color: \"#2c3f5c\",\n    title: \"Enregistrer la modification\",\n    onPress: addNewTodo\n  }, \"New\")))), React.createElement(\"div\", null, React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: setNewTodoText,\n    placeholder: \"Saisir ici un nouvel item...\",\n    minLength: 1,\n    onSubmitEditing: addNewTodo,\n    value: newTodoText\n  })), React.createElement(View, {\n    style: styles.contentButton\n  }, React.createElement(Button, {\n    color: \"#2c3f5c\",\n    title: \"Cr\\xE9er nouvel item\",\n    onPress: addNewTodo\n  }, \"New\"), React.createElement(Button, {\n    color: \"#2c3f5c\",\n    title: \"Cocher tout\",\n    onPress: checkAllTodos\n  }, \"New\"), React.createElement(Button, {\n    color: \"#2c3f5c\",\n    title: \"D\\xE9cocher tout\",\n    onPress: uncheckAllTodos\n  }, \"New\"), React.createElement(Button, {\n    color: \"#2c3f5c\",\n    title: \"Todos r\\xE9solus\",\n    onPress: solvedTodo\n  }, \"New\"), React.createElement(Button, {\n    color: \"#2c3f5c\",\n    title: \"Todos en cours\",\n    onPress: progressTodo\n  }, \"New\"), React.createElement(Button, {\n    color: \"#2c3f5c\",\n    title: \"Tous les Todos (confondus)\",\n    onPress: allTodos\n  }, \"New\")));\n}\nvar styles = StyleSheet.create({\n  contentButton: {\n    contentContainerStyle: 'center',\n    marginLeft: '35%',\n    marginRight: '35%',\n    justifyContent: 'center',\n    padding: 5\n  },\n  listTask: {\n    marginLeft: '26%',\n    marginTop: 2,\n    contentContainerStyle: 'center',\n    backgroundColor: 'e8ffff',\n    fontSize: 12\n  },\n  input: {\n    contentContainerStyle: 'center',\n    borderColor: 'black',\n    padding: 10,\n    borderRadius: 5,\n    borderWidth: 2,\n    width: '50%',\n    marginBottom: 5,\n    marginLeft: '26%'\n  },\n  textWelcome: {\n    fontSize: 22,\n    fontFamily: 'roboto',\n    padding: 35,\n    justifyContent: 'center'\n  },\n  modifyDiv: {\n    marginLeft: '35%',\n    marginRight: '35%',\n    flexDirection: \"row\",\n    flex: 2\n  },\n  progressBar: {\n    height: 40,\n    display: 'flex',\n    width: '30%',\n    backgroundColor: 'white',\n    borderColor: '#000',\n    borderWidth: 2,\n    borderRadius: 5,\n    marginLeft: '35%',\n    marginRight: '35%',\n    marginBottom: 35,\n    flexDirection: \"row\"\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","useRef","createTask","taskList","deleteTask","checkAll","unCheckAll","doneTasks","undoneTasks","TodoItem","TokenContext","UsernameContext","TodoList","todos","setTodos","todosScreen","setTodosScreen","filter","item","done","length","count","setCount","newTodoText","setNewTodoText","token","useContext","username","counter","Animated","Value","current","enableModif","setEnableModif","load","value","timing","toValue","duration","useNativeDriver","start","getTaskList","boolModify","clearInterval","countInterval","width","interpolate","inputRange","outputRange","extrapolate","then","data","JSON","stringify","updateCountItemDone","id","newTodos","map","todo","addNewTodo","newTask","progressTodo","solvedTodo","allTodos","console","log","checkAllTodos","uncheckAllTodos","deleteTodo","enableModifyTodo","modifyTodo","flex","styles","textWelcome","color","progressBar","StyleSheet","absoluteFill","backgroundColor","listTask","modifyDiv","input","contentButton","create","contentContainerStyle","marginLeft","marginRight","justifyContent","padding","marginTop","fontSize","borderColor","borderRadius","borderWidth","marginBottom","fontFamily","flexDirection","height","display"],"sources":["/home/marta/Documents/L3/React/projetreact-marta-sara/tp4/components/TodoList.js"],"sourcesContent":["import React, {useState, useEffect, useRef } from \"react\";\nimport { StyleSheet,ScrollView, View, TextInput, Button, Text, FlatList, Switch, Animated } from 'react-native';\nimport { createTask, taskList, deleteTask, checkAll, unCheckAll, doneTasks, undoneTasks } from \"../API/todoAPI\";\nimport TodoItem from './TodoItem';\nimport { TokenContext, UsernameContext } from \"../Context/Context\";\n\n\n\nexport default function TodoList(){\n   \n   /** initialiser todos afin de pouvoir l'utiliser avec les changements d'états*/\n   const [todos, setTodos]= useState([])\n   const [todosScreen, setTodosScreen] = useState([])\n   const [count, setCount]= useState(todos.filter(item => item.done).length)\n   const [newTodoText, setNewTodoText] = useState(\"\")\n   const token = React.useContext(TokenContext)\n   const username = React.useContext(UsernameContext)\n   const counter = useRef(new Animated.Value(0)).current;\n   const [enableModif, setEnableModif] = useState(false);\n\n   const load = (value) => {\n      Animated.timing(counter, {\n        toValue: value,\n        duration: 1000,\n        useNativeDriver: true,\n      }).start();\n    };\n   \n   useEffect(() => {\n      getTaskList()\n   } ,[] \n   );\n\n   useEffect(() => {\n      setEnableModif(boolModify)\n   } ,[boolModify] \n   );\n\n   useEffect(() => {\n      load(count)\n      if (count >= 100) {\n        setCount(100);\n        clearInterval(countInterval);\n      }\n    }, [count]);\n   \n\n   const width = counter.interpolate({\n      inputRange: [0, todosScreen.length],\n      outputRange: [\"0%\", \"100%\"],\n      extrapolate: \"clamp\"\n    });\n\n\n\n   function getTaskList() {\n      \n      taskList(username[0], token[0]).then(data => {\n         if (JSON.stringify(todos) != JSON.stringify(data) ) {\n            setTodos(data);\n            setTodosScreen(data) ;\n            setCount(data.filter(item => item.done).length)\n         }\n\n      })\n   }\n   \n\n   const updateCountItemDone = (id) =>{\n      /**compte les fonctions realisées et actualise au fur et à mesure */\n      const newTodos = todos.map((todo) => {\n      if (todo.id === id) {\n         todo.done = !todo.done;\n      } \n      return todo;\n      });\n\n      setCount(newTodos.filter(item => item.done).length);\n   }\n\n\n   const addNewTodo = () =>{\n      /**ajoute un nouvel item à notre liste de taches */\n      const newTask = createTask(newTodoText,username[0],token[0]).then(data => {getTaskList()})\n      setNewTodoText(\"\")\n   }\n   \n\n   const progressTodo = () =>{\n      /**affiche les todos pas encore réalisés cad todos non cochés*/\n      undoneTasks(token[0], username[0]).\n      then(data => {\n         setTodos(data)\n      })\n   }\n\n\n   const solvedTodo = () =>{\n      /**affiche les todos dont l'exécution est terminée cad todos cochés*/\n      doneTasks(token[0], username[0]).\n      then(data => {\n         setTodos(data)\n      })  \n   }\n\n\n   const allTodos = () =>{\n      /**affiche les todos qu'ils soient cochés ou non*/\n      getTaskList()\n      console.log(boolModify)\n\n   }\n\n\n   const checkAllTodos = () =>{\n      checkAll(token[0] ,username[0]).then(data => {getTaskList()})\n   }\n   \n\n   const uncheckAllTodos = () =>{\n      unCheckAll(token[0], username[0]).then(data => {getTaskList()})\n   }\n\n\n   const deleteTodo = (id) => {\n      /**permet la suppression d'un item donné en paramètre */\n      deleteTask(id,token[0]).then(getTaskList)\n   }\n\n   const enableModifyTodo = () =>{\n      console.log('Avant : ' + enableModif)\n      setEnableModif(true)\n      console.log('Apres : '+enableModif)\n\n\n   }\n\n   const modifyTodo = () =>{\n      /**permet la modification d' un element */\n       \n   }\n\n   return (\n      \n      <ScrollView contentContainerStyle={{flex: 1}} >\n         \n            <Text style={styles.textWelcome}>\n               Bienvenue dans votre application de gestion de tâches !\n               Il y a au total <span style ={{color:'#DC143C'}}>{todosScreen.length} tâche(s) </span> dont <span style ={{color:'#DC143C'}}>{count} realisée(s) </span>. Let's Go!\n               &nbsp;\n               &nbsp;\n               &nbsp;\n            </Text>\n\n            <View style={styles.progressBar}>\n               <Animated.View style={{ ...StyleSheet.absoluteFill, backgroundColor: '#DC143C', width: width }}/>\n               <Text> {count}/{todosScreen.length}</Text>\n            </View>\n         \n            \n         <div>\n            <FlatList\n            numColumns={3}\n               style={styles.listTask}\n               data={todos}\n               renderItem={({ item }) => <TodoItem item={item} getTaskList={getTaskList} deleteTodo={deleteTodo} enableModifyTodo={enableModifyTodo} updateCountItemDone={updateCountItemDone}\n                  checkAllTodos={checkAllTodos} uncheckAllTodos={uncheckAllTodos} />} />\n         </div>\n         \n         <div >\n            <View style={styles.modifyDiv}>\n               <View>\n               <TextInput style={styles.input}\n               \n               onChangeText={setNewTodoText}\n               placeholder='Modifier ici votre item...'\n               minLength={1}\n               editable={enableModif}\n               onSubmitEditing={addNewTodo}\n               value={newTodoText} />\n            </View>\n            <View >\n               <Button color='#2c3f5c' title=\"Enregistrer la modification\" onPress={addNewTodo}>New</Button></View>\n            </View>\n            \n         </div>\n               \n        <div>\n         <TextInput style={styles.input}\n               \n               onChangeText={setNewTodoText}\n               placeholder='Saisir ici un nouvel item...'\n               minLength={1}\n               onSubmitEditing={addNewTodo}\n               value={newTodoText} /></div>\n\n         <View style={styles.contentButton}>\n               <Button color='#2c3f5c' title=\"Créer nouvel item\" onPress={addNewTodo}>New</Button>\n\n               <Button color='#2c3f5c' title=\"Cocher tout\" onPress={checkAllTodos}>New</Button>\n\n               <Button color='#2c3f5c' title=\"Décocher tout\" onPress={uncheckAllTodos}>New</Button>\n\n               <Button color='#2c3f5c' title=\"Todos résolus\" onPress={solvedTodo}>New</Button>\n\n               <Button color='#2c3f5c' title=\"Todos en cours\" onPress={progressTodo}>New</Button>\n\n               <Button color='#2c3f5c' title=\"Tous les Todos (confondus)\" onPress={allTodos}>New</Button>\n         </View>\n      </ScrollView>\n\n   );\n}\n\n\n\nconst styles = StyleSheet.create({\n\n   contentButton: {\n      contentContainerStyle : 'center',\n      marginLeft : '35%',\n      marginRight : '35%',\n      justifyContent:'center',\n      padding:5,\n      \n   },\n\n   listTask: {\n      marginLeft : '26%',\n      marginTop : 2,\n      contentContainerStyle : 'center',\n      backgroundColor : 'e8ffff',\n      fontSize: 12, \n   },\n\n   input :{\n      contentContainerStyle : 'center',\n      borderColor :'black',\n      padding :10,\n      borderRadius : 5,\n      borderWidth : 2,\n      width : '50%',\n      marginBottom: 5,\n      marginLeft : '26%',\n   },\n   \n   textWelcome:{\n      fontSize: 22,\n      fontFamily: 'roboto',\n      padding : 35,\n      justifyContent : 'center',\n\n   },\n\n   modifyDiv:{\n      marginLeft : '35%',\n      marginRight : '35%',\n      flexDirection: \"row\",\n      flex: 2,\n   },\n\n   progressBar: {\n      height: 40,\n      display: 'flex',\n      width: '30%',\n      backgroundColor: 'white',\n      borderColor: '#000',\n      borderWidth: 2,\n      borderRadius: 5,\n      marginLeft : '35%',\n      marginRight : '35%',\n      marginBottom : 35,\n      flexDirection: \"row\"\n    }\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}