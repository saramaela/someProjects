{"ast":null,"code":"var API_URL = 'http://127.0.0.1:4000';\nvar SIGN_IN = 'mutation($username:String!, $password:String!){signIn(username:$username, password:$password)}';\nvar SIGN_UP = 'mutation($username:String!, $password:String!){signUp(username:$username, password:$password)}';\nvar TASK_LIST = 'query taskLists($username: String!) {tasks(where: { owner: { username: $username } }) {id title done}}';\nvar CREATE_TASK = 'mutation newTask($title: String!, $username: String!) {createTasks(input: {title: $title done: true owner: { connect: { where: { username: $username } } }}) {tasks {title}}}';\nvar DELETE_TASK = 'mutation delete($id:ID){deleteTasks(where: { id: $id }){nodesDeleted}}';\nvar UPDATE_TASK = 'mutation update($id: ID, $done: Boolean) {updateTasks(where: { id: $id }update: { done: $done}) {tasks{id title done}}}';\nvar CHECK_ALL = 'mutation update {updateTasks(update: { done: true}) {tasks{id title done}}}';\nvar UNCHECK_ALL = 'mutation update {updateTasks(update: { done: false}) {tasks{id title done}}}';\nexport function signIn(username, password) {\n  return fetch(API_URL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      query: SIGN_IN,\n      variables: {\n        username: username,\n        password: password\n      }\n    })\n  }).then(function (response) {\n    return response.json();\n  }).then(function (jsonResponse) {\n    if (jsonResponse.errors != null) {\n      throw jsonResponse.errors[0];\n    }\n    return jsonResponse.data.signIn;\n  }).catch(function (error) {\n    throw error;\n  });\n}\nexport function signUp(username, password) {\n  return fetch(API_URL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      query: SIGN_UP,\n      variables: {\n        username: username,\n        password: password\n      }\n    })\n  }).then(function (response) {\n    return response.json();\n  }).then(function (jsonResponse) {\n    if (jsonResponse.errors != null) {\n      throw jsonResponse.errors[0];\n    }\n    return jsonResponse.data.signUp;\n  }).catch(function (error) {\n    throw error;\n  });\n}\nexport function taskList(username, token) {\n  return fetch(API_URL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      \"authorization\": \"Bearer \" + token\n    },\n    body: JSON.stringify({\n      query: TASK_LIST,\n      variables: {\n        username: username\n      }\n    })\n  }).then(function (response) {\n    return response.json();\n  }).then(function (jsonResponse) {\n    if (jsonResponse.errors != null) {\n      throw jsonResponse.errors[0];\n    }\n    return jsonResponse.data.tasks;\n  }).catch(function (error) {\n    throw error;\n  });\n}\nexport function createTask(title, username, token) {\n  return fetch(API_URL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      \"authorization\": \"Bearer \" + token\n    },\n    body: JSON.stringify({\n      query: CREATE_TASK,\n      variables: {\n        username: username,\n        title: title\n      }\n    })\n  }).then(function (response) {\n    return response.json();\n  }).then(function (jsonResponse) {\n    if (jsonResponse.errors != null) {\n      throw jsonResponse.errors[0];\n    }\n  }).catch(function (error) {\n    throw error;\n  });\n}\nexport function deleteTask(id, token) {\n  return fetch(API_URL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      \"authorization\": \"Bearer \" + token\n    },\n    body: JSON.stringify({\n      query: DELETE_TASK,\n      variables: {\n        id: id\n      }\n    })\n  }).then(function (response) {\n    return response.json();\n  }).then(function (jsonResponse) {\n    if (jsonResponse.errors != null) {\n      throw jsonResponse.errors[0];\n    }\n  }).catch(function (error) {\n    throw error;\n  });\n}\nexport function updateTask(id, token, done) {\n  return fetch(API_URL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      \"authorization\": \"Bearer \" + token\n    },\n    body: JSON.stringify({\n      query: UPDATE_TASK,\n      variables: {\n        id: id,\n        done: done\n      }\n    })\n  }).then(function (response) {\n    return response.json();\n  }).then(function (jsonResponse) {\n    if (jsonResponse.errors != null) {\n      throw jsonResponse.errors[0];\n    }\n    return jsonResponse.data.tasks;\n  }).catch(function (error) {\n    throw error;\n  });\n}\nexport function checkAll(token) {\n  return fetch(API_URL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      \"authorization\": \"Bearer \" + token\n    },\n    body: JSON.stringify({\n      query: CHECK_ALL,\n      variables: {}\n    })\n  }).then(function (response) {\n    return response.json();\n  }).then(function (jsonResponse) {\n    if (jsonResponse.errors != null) {\n      throw jsonResponse.errors[0];\n    }\n    return jsonResponse.data.tasks;\n  }).catch(function (error) {\n    throw error;\n  });\n}\nexport function unCheckAll(token) {\n  return fetch(API_URL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      \"authorization\": \"Bearer \" + token\n    },\n    body: JSON.stringify({\n      query: UNCHECK_ALL,\n      variables: {}\n    })\n  }).then(function (response) {\n    return response.json();\n  }).then(function (jsonResponse) {\n    if (jsonResponse.errors != null) {\n      throw jsonResponse.errors[0];\n    }\n    return jsonResponse.data.tasks;\n  }).catch(function (error) {\n    throw error;\n  });\n}","map":{"version":3,"names":["API_URL","SIGN_IN","SIGN_UP","TASK_LIST","CREATE_TASK","DELETE_TASK","UPDATE_TASK","CHECK_ALL","UNCHECK_ALL","signIn","username","password","fetch","method","headers","body","JSON","stringify","query","variables","then","response","json","jsonResponse","errors","data","catch","error","signUp","taskList","token","tasks","createTask","title","deleteTask","id","updateTask","done","checkAll","unCheckAll"],"sources":["/home/marta/Documents/L3/React/projetreact-marta-sara/tp4/API/todoAPI.js"],"sourcesContent":["const API_URL = 'http://127.0.0.1:4000'\n\nconst SIGN_IN =\n  'mutation($username:String!, $password:String!){signIn(username:$username, password:$password)}'\n\nconst SIGN_UP =\n  'mutation($username:String!, $password:String!){signUp(username:$username, password:$password)}'\n\nconst TASK_LIST = \n  'query taskLists($username: String!) {tasks(where: { owner: { username: $username } }) {id title done}}'\n\nconst CREATE_TASK = \n  'mutation newTask($title: String!, $username: String!) {createTasks(input: {title: $title done: true owner: { connect: { where: { username: $username } } }}) {tasks {title}}}'\n\nconst DELETE_TASK = \n  'mutation delete($id:ID){deleteTasks(where: { id: $id }){nodesDeleted}}'\n\nconst UPDATE_TASK = \n  'mutation update($id: ID, $done: Boolean) {updateTasks(where: { id: $id }update: { done: $done}) {tasks{id title done}}}'\n\nconst CHECK_ALL = \n  'mutation update {updateTasks(update: { done: true}) {tasks{id title done}}}'\n\nconst UNCHECK_ALL = \n  'mutation update {updateTasks(update: { done: false}) {tasks{id title done}}}'\n\n\nexport function signIn (username, password) {\n  return fetch(API_URL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      query: SIGN_IN,\n      variables: {\n        username: username,\n        password: password\n      }\n    })\n  })\n    .then(response => {\n      return response.json()\n    })\n    .then(jsonResponse => {\n      if (jsonResponse.errors != null) {\n        throw jsonResponse.errors[0]\n      }\n      return jsonResponse.data.signIn\n    })\n    .catch(error => {\n      throw error\n    })\n}\n\nexport function signUp (username, password) {\n  return fetch(API_URL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      query: SIGN_UP,\n      variables: {\n        username: username,\n        password: password\n      }\n    })\n  })\n    .then(response => {\n      return response.json()\n    })\n    .then(jsonResponse => {\n      if (jsonResponse.errors != null) {\n        throw jsonResponse.errors[0]\n      }\n      return jsonResponse.data.signUp\n    })\n    .catch(error => {\n      throw error\n    })\n}\n\nexport function taskList (username,token) {\n  return fetch(API_URL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      \"authorization\" : \"Bearer \" + token\n    },\n    body: JSON.stringify({\n      query: TASK_LIST,\n      variables: {\n        username: username\n      }\n    })\n  })\n    .then(response => {\n      return response.json()\n    })\n    .then(jsonResponse => {\n      if (jsonResponse.errors != null) {\n        throw jsonResponse.errors[0]\n      }\n      return jsonResponse.data.tasks\n    })\n    .catch(error => {\n      throw error\n    })\n}\n\nexport function createTask (title,username,token) {\n  return fetch(API_URL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      \"authorization\" : \"Bearer \" + token\n    },\n    body: JSON.stringify({\n      query: CREATE_TASK,\n      variables: {\n        username: username,\n        title: title\n      }\n    })\n  })\n    .then(response => {\n      return response.json()\n    })\n    .then(jsonResponse => {\n      if (jsonResponse.errors != null) {\n        throw jsonResponse.errors[0]\n      }\n    })\n    .catch(error => {\n      throw error\n    })\n}\n\nexport function deleteTask (id,token) {\n  return fetch(API_URL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      \"authorization\" : \"Bearer \" + token\n    },\n    body: JSON.stringify({\n      query: DELETE_TASK,\n      variables: {\n        id: id\n      }\n    })\n  })\n    .then(response => {\n      return response.json()\n    })\n    .then(jsonResponse => {\n      if (jsonResponse.errors != null) {\n        throw jsonResponse.errors[0]\n      }\n    })\n    .catch(error => {\n      throw error\n    })\n}\n\nexport function updateTask (id,token,done) {\n  return fetch(API_URL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      \"authorization\" : \"Bearer \" + token\n    },\n    body: JSON.stringify({\n      query: UPDATE_TASK,\n      variables: {\n        id: id,\n        done: done\n      }\n    })\n  })\n    .then(response => {\n      return response.json()\n    })\n    .then(jsonResponse => {\n      if (jsonResponse.errors != null) {\n        throw jsonResponse.errors[0]\n      }\n      return jsonResponse.data.tasks\n    })\n    .catch(error => {\n      throw error\n    })\n}\n\nexport function checkAll (token) {\n  return fetch(API_URL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      \"authorization\" : \"Bearer \" + token\n    },\n    body: JSON.stringify({\n      query: CHECK_ALL,\n      variables: {\n      }\n    })\n  })\n    .then(response => {\n      return response.json()\n    })\n    .then(jsonResponse => {\n      if (jsonResponse.errors != null) {\n        throw jsonResponse.errors[0]\n      }\n      return jsonResponse.data.tasks\n    })\n    .catch(error => {\n      throw error\n    })\n}\n\nexport function unCheckAll (token) {\n  return fetch(API_URL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      \"authorization\" : \"Bearer \" + token\n    },\n    body: JSON.stringify({\n      query: UNCHECK_ALL,\n      variables: {\n      }\n    })\n  })\n    .then(response => {\n      return response.json()\n    })\n    .then(jsonResponse => {\n      if (jsonResponse.errors != null) {\n        throw jsonResponse.errors[0]\n      }\n      return jsonResponse.data.tasks\n    })\n    .catch(error => {\n      throw error\n    })\n}\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}