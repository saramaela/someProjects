{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Navigation from \"./Navigation/Navigation\";\nimport { TokenContext, UsernameContext } from \"./Context/Context\";\nexport default function App() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    token = _useState2[0],\n    setToken = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    username = _useState4[0],\n    setUsername = _useState4[1];\n  console.log('token', token);\n  return React.createElement(UsernameContext.Provider, {\n    value: [username, setUsername]\n  }, React.createElement(TokenContext.Provider, {\n    value: [token, setToken]\n  }, React.createElement(Navigation, null)));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["React","useState","Navigation","TokenContext","UsernameContext","App","token","setToken","username","setUsername","console","log","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"sources":["/home/marta/Documents/L3/React/projetreact-marta-sara/tp4/App.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { Button, StyleSheet, Text, View } from 'react-native'\n\nimport Navigation from './Navigation/Navigation'\n\nimport { TokenContext, UsernameContext } from './Context/Context'\n\nexport default function App () {\n  const [token, setToken] = useState(null)\n  const [username, setUsername] = useState(null)\n\n  console.log('token', token)\n  return (\n    <UsernameContext.Provider value={[username, setUsername]}>\n      <TokenContext.Provider value={[token, setToken]}>\n        <Navigation />\n      </TokenContext.Provider>\n    </UsernameContext.Provider>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n})\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA;AAAA;AAAA;AAAA;AAGvC,OAAOC,UAAU;AAEjB,SAASC,YAAY,EAAEC,eAAe;AAEtC,eAAe,SAASC,GAAG,GAAI;EAC7B,gBAA0BJ,QAAQ,CAAC,IAAI,CAAC;IAAA;IAAjCK,KAAK;IAAEC,QAAQ;EACtB,iBAAgCN,QAAQ,CAAC,IAAI,CAAC;IAAA;IAAvCO,QAAQ;IAAEC,WAAW;EAE5BC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEL,KAAK,CAAC;EAC3B,OACE,oBAAC,eAAe,CAAC,QAAQ;IAAC,KAAK,EAAE,CAACE,QAAQ,EAAEC,WAAW;EAAE,GACvD,oBAAC,YAAY,CAAC,QAAQ;IAAC,KAAK,EAAE,CAACH,KAAK,EAAEC,QAAQ;EAAE,GAC9C,oBAAC,UAAU,OAAG,CACQ,CACC;AAE/B;AAEA,IAAMK,MAAM,GAAGC,UAAU,CAACC,MAAM,CAAC;EAC/BC,SAAS,EAAE;IACTC,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}