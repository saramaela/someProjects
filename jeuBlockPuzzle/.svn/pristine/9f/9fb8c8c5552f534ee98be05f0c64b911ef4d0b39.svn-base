def grille(n):
    return [[1]*n for i in range(n)]


def score_joueur(n):
    gr = grille(n)
    score = 0 ;
    for i in range (n):
        for j in range (n):
            if gr[i][j]==1:
                score = score + 1;
    return score





import random

l= [(0,0), (-1,0), (-2,0), (-3,0), (-3, 1), (-3,2)]
carre_2=[(0,0),(0,1),(-1,0),(-1,1)]
carre_3=[(0,0),(0,1),(0,2),(2,-1),(1,-1),(0,-1),(0,-2),(1,-2),(2,-2)]
colonne_3=[(0,0),(0,1),(0,2)]
ligne_3=[(0,0),(1,0),(2,0)]  

blocs=[l, carre_2, carre_3, colonne_3, ligne_3]   

def choix_blocs() :
    return random.choices(blocs, k=3)



print (grille(3))
print(score_joueur(3))

print(choix_blocs())




class Grille:
    
    def __init__(self, n ):
        self.matrix = [[1]*n for i in range(n)]
        self.score = score_joueur(n)
        self.effacer = effacer_lignes(self.matrix)

        
    def score_joueur(self, m):
         score = 0 ;
         for i in range (m):
             for j in range (m):
                 if self.matrix ==1:
                     score = score + 1;
                     return score

    def effacer_lignes(self, grille):
        for ligne in grille:
            if 0 not in ligne:
                for i in range( len(self.matrix)):
                    ligne[i] = 0
        return grille                    
   
test = Grille(5)
print(test.matrix)
print(test.score)
print(test.effacer)



