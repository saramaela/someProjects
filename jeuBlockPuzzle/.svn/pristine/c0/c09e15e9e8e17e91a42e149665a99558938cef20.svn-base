# -*- coding: utf-8 -*-
"""
Created on Thu Feb  4 13:14:17 2021

@author: lucgu
"""

import pygame
import sys
import random
from grid import Grille
from blocs import Blocs


class Jeu() : 
    
    def __init__(self,n):
        self.grilles = Grille(n) 
        self.blocs = Blocs()
        self.screen = pygame.display.set_mode((800,700)) #création d'une page 
        self.tot = None
        self.n = n
        self.t1 = None
        self.t2 = None
        self.t3 = None
        self.t1s=  [[0]*3 for i in range(3)]
        self.t2s=  [[0]*3 for i in range(3)]
        self.t3s=  [[0]*3 for i in range(3)]
        self.blocs.blocs_disponibles = self.blocs.proposed_blocs()
    


            
            
            
        

    

    

    def fonction_principale(self):
        while True:
            for event in pygame.event.get():
                if event.type == pygame.QUIT: #pour tout les événements dans pygame
                    sys.exit()

            



            
            self.screen.fill((240,240,240)) #Afficher l'écran en blanc
            self.tot = pygame.Surface((self.n*50,self.n*50)) #création d'un rectangle pour la grille avec la matrix
            self.tot.fill((0,100,111))
            self.t1 =  pygame.Surface((200,200))
            self.t1.fill((250,0,0))
            self.t2 =  pygame.Surface((200,200))
            self.t2.fill((250,250,0))
            self.t3 =  pygame.Surface((200,200))
            self.t3.fill((0,250,0))            
            
            
        
            for val in range (len(self.grilles.matrix)) :
                for i in range(len (self.grilles.matrix[val])):
                    if self.grilles.matrix[val][i] == 'X':
                        x = pygame.Surface((50,50))
                        self.tot.blit(x,(val*50,i*50))
                        
                        
            for pos in self.blocs.blocs_disponibles[0] :
                x= 0;
                self.t1s[x + pos[0]][x + pos[1]] = 'X'
                if self.t1s[x + pos[0]][x + pos[1]] == 'X':
                    y = pygame.Surface((50,50))
                    self.t1.blit(y,( (pos[0])* 50, (pos[1])* 50 ))
                    
                    
                    
            for pos in self.blocs.blocs_disponibles[1] :
                x= 0;
                self.t2s[x + pos[0]][x + pos[1]] = 'X'
                if self.t2s[x + pos[0]][x + pos[1]] == 'X':
                    y = pygame.Surface((50,50))
                    self.t2.blit(y,( (pos[0])* 50, (pos[1])* 50 )) 
                    
                    
                    
            for pos in self.blocs.blocs_disponibles[2] :
                x= 0;
                self.t3s[x + pos[0]][x + pos[1]] = 'X'
                if self.t3s[x + pos[0]][x + pos[1]] == 'X':
                    y = pygame.Surface((50,50))
                    self.t3.blit(y,( (pos[0])* 50, (pos[1])* 50 ))                    
            #for val in self.blocs.blocs_disponibles:
             #   self.t1s[val[0]][val[1]] = 'X'                 
              #  for t in range (len(self.t1s)) :
              #  for t in range (len(self.t1s)) :
               #     for i in range(len (self.t1s[t])):
                #        if self.t1s[val[0]][val[1]] == 'X' :
                 #           y = pygame.Surface((50,50))
                  #          self.t1.blit(y,(val[0]*50,val[1]*50))
                            
                
                    
                    
                
            

            

   
            
            # on veut mettre chaque bloc de propose blocs dans test test2 test3
            

 

            for x in range(0,self.n*50,50):#a partir du N sélectionner au départ, créer une grille 
                pygame.draw.line(self.tot,(255,255,255),[x,0],[x,self.n*50],1)
            for y in range(0,self.n*50,50):
                pygame.draw.line(self.tot,(255,255,255),[0,y],[self.n*50,y],1)
               
                
            for x in range(0,200,50):#a partir du N sélectionner au départ, créer une grille 
                pygame.draw.line(self.t1,(0,0,0),[x,0],[x,200],1)
            for y in range(0,200,50):
                pygame.draw.line(self.t1,(0,0,0),[0,y],[200,y],1)   
            
            for x in range(0,200,50):#a partir du N sélectionner au départ, créer une grille 
                pygame.draw.line(self.t2,(0,0,0),[x,0],[x,200],1)
            for y in range(0,200,50):
                pygame.draw.line(self.t2,(0,0,0),[0,y],[200,y],1)
                
            for x in range(0,200,50):#a partir du N sélectionner au départ, créer une grille 
                pygame.draw.line(self.t3,(0,0,0),[x,0],[x,200],1)
            for y in range(0,200,50):
                pygame.draw.line(self.t3,(0,0,0),[0,y],[200,y],1)
                

            

   
            self.screen.blit(self.tot,(20,20))
            self.screen.blit(self.t1,(540,20))# pose la grille dans la fenetre générale
            self.screen.blit(self.t2,(540,220))# pose la grille dans la fenetre générale
            self.screen.blit(self.t3,(540,420))# pose la grille dans la fenetre générale

            pygame.display.flip() #mettre à jour la page
    
    

if __name__== "__main__":
    pygame.init()
    Grille(10)
    Jeu(10).fonction_principale()
    pygame.quit()



#convertir le clique de souris en pixel 

              
 #montre si une des touche est cliqué
            #print(mouse)
                
#Chose à faire 
    #Placer les blocs dans la suface test
    #Pouvoir déplacer les blocs vers la grille 
    #pouvoir placer les blocs sur la grille
    #créer une surface pour le score
